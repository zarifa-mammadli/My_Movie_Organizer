{"ast":null,"code":"var _jsxFileName = \"D:\\\\bootcamp-m4-starter\\\\src\\\\components\\\\Favorites\\\\Favorites.js\";\nimport React, { Component } from 'react';\nimport './Favorites.css';\nimport { actionDelete } from '../../redux/actions';\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapState = store => ({\n  favoriteMovies: store.favoriteMovies\n});\nconst mapDispatch = dispatch => ({\n  removeFromCard: id => dispatch(actionDelete(id))\n});\nconst connector = connect(mapState, mapDispatch);\n\n// class Favorites extends Component {\n//     state = {\n//         title: \"\",\n//         textLink: '#',\n//         inputActive: true,\n//         linkActive: false     \n//     }\n//     handleChangeName = (event) => {\n//         this.setState({ title: event.target.value });\n//       };\n\n//       handleSaveList = () => {\n//         this.setState({\n//           inputActive: false,\n//           linkActive: true\n//         });\n//         this.saveMovies();\n\n//       //   this.setState({ inputActive: true });\n//       //   this.props.saveMovies(this.state.title, this.saveMovies());\n//       };\n\n//       saveMovies = () => {\n//         fetch(\"https://acb-api.algoritmika.org/api/movies/list\",\n//           {\n//             method: 'POST',\n//             headers: {\n//               'Content-type': 'application/json',\n//             },\n//             body: JSON.stringify({\n//               \"title\": this.state.title,\n//               \"movies\": this.props.favoriteMovies.map(e => e.imdbID)\n//             })\n//           })\n//           .then(res => res.json())\n//           .then(data => {\n//             this.setState({textLink: data.id})\n//           })\n//       };\n\n//     render() { \n//         return (\n//             <div className=\"favorites\">\n//                 <input value={this.state.title} placeholder='Введите название списка' className=\"favorites__name\" \n//                 disabled={this.state.inputActive ? null : \"disabled\"} onChange={this.handleChangeName} />\n//                 <ul className=\"favorites__list\">\n//                     {this.props.favoriteMovies.map((item) => {\n//                         return <li key={item.imdbID}>{item.Title} ({item.Year}) <button onClick={()=>{this.props.removeFromCard(item.imdbID)}}> X </button> </li>;\n//                     })}  \n//                 </ul>\n\n//                 <button type=\"button\" onClick={() => this.handleSaveList()} \n//                 disabled={!this.state.title || this.props.moviesList.length === 0}\n//                 className={`favorites__save ${this.state.linkActive ? \"link__none\" : null}`} >Сохранить список\n//                 </button>\n\n//                  <a href={`http://localhost:3000/list/${this.state.textLink}`}\n//                   className={`link__none ${this.state.linkActive ? \"link__block\" : null}`}\n//                   target=\"_blank\" rel=\"noreferrer\" >Share with friends</a>\n//             </div>\n//         );\n//     }\n// }\n\n// const NewFavorites =connector(Favorites)\n// export default NewFavorites;\n\nclass Favorites extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      title: \"\",\n      textLink: '#',\n      inputActive: true,\n      linkActive: false\n    };\n    this.handleInput = e => {\n      this.setState({\n        title: e.target.value\n      });\n    };\n    this.handleSaveList = () => {\n      this.setState({\n        inputActive: false,\n        linkActive: true\n      });\n      this.saveMovies();\n    };\n    this.saveMovies = () => {\n      fetch(\"https://acb-api.algoritmika.org/api/movies/list\", {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"title\": this.state.title,\n          \"movies\": this.props.moviesList.map(e => e.imdbID)\n        })\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          textLink: data.id\n        });\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favorites\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.title,\n        onChange: this.handleInput,\n        disabled: this.state.inputActive ? null : \"disabled\",\n        className: \"favorites__name\",\n        placeholder: \"Create list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"favorites__list\",\n        children: this.props.favoriteMovies.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"favorites__list--item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"favorites__list--title\",\n              children: [item.Title, \" \", item.Year]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"favorites__list--delete\",\n              onClick: () => this.props.removeFromCard(item.imdbID),\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)]\n          }, item.imdbID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => this.handleSaveList(),\n        disabled: !this.state.title || this.props.favoriteMovies.length === 0,\n        className: `favorites__save ${this.state.linkActive ? \"link__none\" : null}`,\n        children: \"Save List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `http://localhost:3000/list/${this.state.textLink}`,\n        className: `link__none ${this.state.linkActive ? \"link__block\" : null}`,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: \"Share with friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    moviesList: state.moviesList\n  };\n};\nexport default connector(mapStateToProps)(Favorites);","map":{"version":3,"names":["React","Component","actionDelete","connect","mapState","store","favoriteMovies","mapDispatch","dispatch","removeFromCard","id","connector","Favorites","state","title","textLink","inputActive","linkActive","handleInput","e","setState","target","value","handleSaveList","saveMovies","fetch","method","headers","body","JSON","stringify","props","moviesList","map","imdbID","then","res","json","data","render","item","Title","Year","length","mapStateToProps"],"sources":["D:/bootcamp-m4-starter/src/components/Favorites/Favorites.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport './Favorites.css';\r\nimport { actionDelete } from '../../redux/actions';\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapState = (store) => ( {favoriteMovies: store.favoriteMovies} );\r\nconst mapDispatch = (dispatch) => ({\r\n  removeFromCard: (id) => dispatch( actionDelete(id) )\r\n})\r\n\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\n\r\n// class Favorites extends Component {\r\n//     state = {\r\n//         title: \"\",\r\n//         textLink: '#',\r\n//         inputActive: true,\r\n//         linkActive: false     \r\n//     }\r\n//     handleChangeName = (event) => {\r\n//         this.setState({ title: event.target.value });\r\n//       };\r\n\r\n//       handleSaveList = () => {\r\n//         this.setState({\r\n//           inputActive: false,\r\n//           linkActive: true\r\n//         });\r\n//         this.saveMovies();\r\n\r\n//       //   this.setState({ inputActive: true });\r\n//       //   this.props.saveMovies(this.state.title, this.saveMovies());\r\n//       };\r\n    \r\n    \r\n//       saveMovies = () => {\r\n//         fetch(\"https://acb-api.algoritmika.org/api/movies/list\",\r\n//           {\r\n//             method: 'POST',\r\n//             headers: {\r\n//               'Content-type': 'application/json',\r\n//             },\r\n//             body: JSON.stringify({\r\n//               \"title\": this.state.title,\r\n//               \"movies\": this.props.favoriteMovies.map(e => e.imdbID)\r\n//             })\r\n//           })\r\n//           .then(res => res.json())\r\n//           .then(data => {\r\n//             this.setState({textLink: data.id})\r\n//           })\r\n//       };\r\n    \r\n//     render() { \r\n//         return (\r\n//             <div className=\"favorites\">\r\n//                 <input value={this.state.title} placeholder='Введите название списка' className=\"favorites__name\" \r\n//                 disabled={this.state.inputActive ? null : \"disabled\"} onChange={this.handleChangeName} />\r\n//                 <ul className=\"favorites__list\">\r\n//                     {this.props.favoriteMovies.map((item) => {\r\n//                         return <li key={item.imdbID}>{item.Title} ({item.Year}) <button onClick={()=>{this.props.removeFromCard(item.imdbID)}}> X </button> </li>;\r\n//                     })}  \r\n//                 </ul>\r\n\r\n//                 <button type=\"button\" onClick={() => this.handleSaveList()} \r\n//                 disabled={!this.state.title || this.props.moviesList.length === 0}\r\n//                 className={`favorites__save ${this.state.linkActive ? \"link__none\" : null}`} >Сохранить список\r\n//                 </button>\r\n\r\n//                  <a href={`http://localhost:3000/list/${this.state.textLink}`}\r\n//                   className={`link__none ${this.state.linkActive ? \"link__block\" : null}`}\r\n//                   target=\"_blank\" rel=\"noreferrer\" >Share with friends</a>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n \r\n// const NewFavorites =connector(Favorites)\r\n// export default NewFavorites;\r\n\r\n\r\n\r\n\r\nclass Favorites extends Component {\r\n  state = {\r\n    title: \"\",\r\n    textLink: '#',\r\n    inputActive: true,\r\n    linkActive: false\r\n  };\r\n\r\n\r\n\r\n  handleInput = (e) => {\r\n    this.setState({title: e.target.value});\r\n  };\r\n\r\n  handleSaveList = () => {\r\n    this.setState({\r\n      inputActive: false,\r\n      linkActive: true\r\n    });\r\n    this.saveMovies();\r\n  };\r\n\r\n\r\n  saveMovies = () => {\r\n    fetch(\"https://acb-api.algoritmika.org/api/movies/list\",\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          \"title\": this.state.title,\r\n          \"movies\": this.props.moviesList.map(e => e.imdbID)\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({textLink: data.id})\r\n      })\r\n  };\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"favorites\">\r\n        <input value={this.state.title} onChange={this.handleInput}\r\n              disabled={this.state.inputActive ? null : \"disabled\"}  className=\"favorites__name\" placeholder=\"Create list\" />\r\n        <ul className=\"favorites__list\">\r\n          {this.props.favoriteMovies.map((item) => {\r\n            return (\r\n              <li className=\"favorites__list--item\" key={item.imdbID}>\r\n                <p className=\"favorites__list--title\">{item.Title} {item.Year}</p>\r\n                <button className=\"favorites__list--delete\" onClick={() => this.props.removeFromCard(item.imdbID)}>X</button>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <button type=\"button\" onClick={() => this.handleSaveList()}\r\n                disabled={!this.state.title || this.props.favoriteMovies.length === 0}\r\n                className={`favorites__save ${this.state.linkActive ? \"link__none\" : null}`}>\r\n          Save List\r\n        </button>\r\n        <br></br>\r\n        <a href={`http://localhost:3000/list/${this.state.textLink}`}\r\n           className={`link__none ${this.state.linkActive ? \"link__block\" : null}`}\r\n           target=\"_blank\" rel=\"noreferrer\" >Share with friends</a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    moviesList: state.moviesList,\r\n  };\r\n};\r\n\r\nexport default connector(mapStateToProps)(Favorites);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}