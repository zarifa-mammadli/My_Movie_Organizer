{"ast":null,"code":"import React, { Component } from 'react';\nimport './Favorites.css';\nimport { actionDelete } from '../../redux/actions';\nimport { connect } from \"react-redux\";\n\n// const mapState = (store) => ( {favoriteMovies: store.favoriteMovies} );\n// const mapDispatch = (dispatch) => ({\n//   removeFromCard: (id) => dispatch( actionDelete(id) )\n// })\n\n// const connector = connect(mapState, mapDispatch);\n\n// class Favorites extends Component {\n//     state = {\n//         title: \"\",\n//         textLink: '#',\n//         inputActive: true,\n//         linkActive: false     \n//     }\n//     handleChangeName = (event) => {\n//         this.setState({ title: event.target.value });\n//       };\n\n//       handleSaveList = () => {\n//         this.setState({\n//           inputActive: false,\n//           linkActive: true\n//         });\n//         this.saveMovies();\n\n//       //   this.setState({ inputActive: true });\n//       //   this.props.saveMovies(this.state.title, this.saveMovies());\n//       };\n\n//       saveMovies = () => {\n//         fetch(\"https://acb-api.algoritmika.org/api/movies/list\",\n//           {\n//             method: 'POST',\n//             headers: {\n//               'Content-type': 'application/json',\n//             },\n//             body: JSON.stringify({\n//               \"title\": this.state.title,\n//               \"movies\": this.props.favoriteMovies.map(e => e.imdbID)\n//             })\n//           })\n//           .then(res => res.json())\n//           .then(data => {\n//             this.setState({textLink: data.id})\n//           })\n//       };\n\n//     render() { \n//         return (\n//             <div className=\"favorites\">\n//                 <input value={this.state.title} placeholder='Введите название списка' className=\"favorites__name\" \n//                 disabled={this.state.inputActive ? null : \"disabled\"} onChange={this.handleChangeName} />\n//                 <ul className=\"favorites__list\">\n//                     {this.props.favoriteMovies.map((item) => {\n//                         return <li key={item.imdbID}>{item.Title} ({item.Year}) <button onClick={()=>{this.props.removeFromCard(item.imdbID)}}> X </button> </li>;\n//                     })}  \n//                 </ul>\n\n//                 <button type=\"button\" onClick={() => this.handleSaveList()} \n//                 disabled={!this.state.title || this.props.moviesList.length === 0}\n//                 className={`favorites__save ${this.state.linkActive ? \"link__none\" : null}`} >Сохранить список\n//                 </button>\n\n//                  <a href={`http://localhost:3000/list/${this.state.textLink}`}\n//                   className={`link__none ${this.state.linkActive ? \"link__block\" : null}`}\n//                   target=\"_blank\" rel=\"noreferrer\" >Share with friends</a>\n//             </div>\n//         );\n//     }\n// }\n\n// const NewFavorites =connector(Favorites)\n// export default NewFavorites;\n\n// class Favorites extends Component {\n//   state = {\n//     title: \"\",\n//     textLink: '#',\n//     inputActive: true,\n//     linkActive: false\n//   };\n\n//   handleInput = (e) => {\n//     this.setState({title: e.target.value});\n//   };\n\n//   handleSaveList = () => {\n//     this.setState({\n//       inputActive: false,\n//       linkActive: true\n//     });\n//     this.saveMovies();\n//   };\n\n//   saveMovies = () => {\n//     fetch(\"https://acb-api.algoritmika.org/api/movies/list\",\n//       {\n//         method: 'POST',\n//         headers: {\n//           'Content-type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           \"title\": this.state.title,\n//           \"movies\": this.props.favoriteMovies.map(e => e.imdbID)\n//         })\n//       })\n//       .then(res => res.json())\n//       .then(data => {\n//         this.setState({textLink: data.id})\n//       })\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"favorites\">\n//         <input value={this.state.title} onChange={this.handleInput}\n//               disabled={this.state.inputActive ? null : \"disabled\"}  className=\"favorites__name\" placeholder=\"Create list\" />\n//         <ul className=\"favorites__list\">\n//           {this.props.favoriteMovies.map((item) => {\n//             return (\n//               <li className=\"favorites__list--item\" key={item.imdbID}>\n//                 {item.Title} {item.Year}\n//                 <button className=\"favorites__list--delete\" onClick={() => this.props.removeFromCard(item.imdbID)}>X</button>\n//               </li>\n\n//             );\n//           })}\n//         </ul>\n//         <button type=\"button\" onClick={() => this.handleSaveList()}\n//                 disabled={!this.state.title || this.props.favoriteMovies.length === 0}\n//                 className={`favorites__save ${this.state.linkActive ? \"link__none\" : null}`}>\n//           Save List\n//         </button>\n//         <br></br>\n//         <a href={`http://localhost:3000/list/${this.state.textLink}`}\n//            className={`link__none ${this.state.linkActive ? \"link__block\" : null}`}\n//            target=\"_blank\" rel=\"noreferrer\" >Share with friends</a>\n//       </div>\n//     );\n//   }\n// }\n\n// const mapStateToProps = (state) => {\n//   return {\n//     favoriteMovies: state.favoriteMovies,\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => ({\n//   removeFromCard: (id) => dispatch( actionDelete(id) )\n// })\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Favorites);","map":{"version":3,"names":["React","Component","actionDelete","connect"],"sources":["D:/bootcamp-m4-starter/src/components/Favorites/Favorites.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport './Favorites.css';\r\nimport { actionDelete } from '../../redux/actions';\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// const mapState = (store) => ( {favoriteMovies: store.favoriteMovies} );\r\n// const mapDispatch = (dispatch) => ({\r\n//   removeFromCard: (id) => dispatch( actionDelete(id) )\r\n// })\r\n\r\n\r\n// const connector = connect(mapState, mapDispatch);\r\n\r\n// class Favorites extends Component {\r\n//     state = {\r\n//         title: \"\",\r\n//         textLink: '#',\r\n//         inputActive: true,\r\n//         linkActive: false     \r\n//     }\r\n//     handleChangeName = (event) => {\r\n//         this.setState({ title: event.target.value });\r\n//       };\r\n\r\n//       handleSaveList = () => {\r\n//         this.setState({\r\n//           inputActive: false,\r\n//           linkActive: true\r\n//         });\r\n//         this.saveMovies();\r\n\r\n//       //   this.setState({ inputActive: true });\r\n//       //   this.props.saveMovies(this.state.title, this.saveMovies());\r\n//       };\r\n    \r\n    \r\n//       saveMovies = () => {\r\n//         fetch(\"https://acb-api.algoritmika.org/api/movies/list\",\r\n//           {\r\n//             method: 'POST',\r\n//             headers: {\r\n//               'Content-type': 'application/json',\r\n//             },\r\n//             body: JSON.stringify({\r\n//               \"title\": this.state.title,\r\n//               \"movies\": this.props.favoriteMovies.map(e => e.imdbID)\r\n//             })\r\n//           })\r\n//           .then(res => res.json())\r\n//           .then(data => {\r\n//             this.setState({textLink: data.id})\r\n//           })\r\n//       };\r\n    \r\n//     render() { \r\n//         return (\r\n//             <div className=\"favorites\">\r\n//                 <input value={this.state.title} placeholder='Введите название списка' className=\"favorites__name\" \r\n//                 disabled={this.state.inputActive ? null : \"disabled\"} onChange={this.handleChangeName} />\r\n//                 <ul className=\"favorites__list\">\r\n//                     {this.props.favoriteMovies.map((item) => {\r\n//                         return <li key={item.imdbID}>{item.Title} ({item.Year}) <button onClick={()=>{this.props.removeFromCard(item.imdbID)}}> X </button> </li>;\r\n//                     })}  \r\n//                 </ul>\r\n\r\n//                 <button type=\"button\" onClick={() => this.handleSaveList()} \r\n//                 disabled={!this.state.title || this.props.moviesList.length === 0}\r\n//                 className={`favorites__save ${this.state.linkActive ? \"link__none\" : null}`} >Сохранить список\r\n//                 </button>\r\n\r\n//                  <a href={`http://localhost:3000/list/${this.state.textLink}`}\r\n//                   className={`link__none ${this.state.linkActive ? \"link__block\" : null}`}\r\n//                   target=\"_blank\" rel=\"noreferrer\" >Share with friends</a>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n \r\n// const NewFavorites =connector(Favorites)\r\n// export default NewFavorites;\r\n\r\n\r\n\r\n\r\n// class Favorites extends Component {\r\n//   state = {\r\n//     title: \"\",\r\n//     textLink: '#',\r\n//     inputActive: true,\r\n//     linkActive: false\r\n//   };\r\n\r\n\r\n\r\n//   handleInput = (e) => {\r\n//     this.setState({title: e.target.value});\r\n//   };\r\n\r\n//   handleSaveList = () => {\r\n//     this.setState({\r\n//       inputActive: false,\r\n//       linkActive: true\r\n//     });\r\n//     this.saveMovies();\r\n//   };\r\n\r\n\r\n//   saveMovies = () => {\r\n//     fetch(\"https://acb-api.algoritmika.org/api/movies/list\",\r\n//       {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({\r\n//           \"title\": this.state.title,\r\n//           \"movies\": this.props.favoriteMovies.map(e => e.imdbID)\r\n//         })\r\n//       })\r\n//       .then(res => res.json())\r\n//       .then(data => {\r\n//         this.setState({textLink: data.id})\r\n//       })\r\n//   };\r\n\r\n\r\n\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"favorites\">\r\n//         <input value={this.state.title} onChange={this.handleInput}\r\n//               disabled={this.state.inputActive ? null : \"disabled\"}  className=\"favorites__name\" placeholder=\"Create list\" />\r\n//         <ul className=\"favorites__list\">\r\n//           {this.props.favoriteMovies.map((item) => {\r\n//             return (\r\n//               <li className=\"favorites__list--item\" key={item.imdbID}>\r\n//                 {item.Title} {item.Year}\r\n//                 <button className=\"favorites__list--delete\" onClick={() => this.props.removeFromCard(item.imdbID)}>X</button>\r\n//               </li>\r\n              \r\n//             );\r\n//           })}\r\n//         </ul>\r\n//         <button type=\"button\" onClick={() => this.handleSaveList()}\r\n//                 disabled={!this.state.title || this.props.favoriteMovies.length === 0}\r\n//                 className={`favorites__save ${this.state.linkActive ? \"link__none\" : null}`}>\r\n//           Save List\r\n//         </button>\r\n//         <br></br>\r\n//         <a href={`http://localhost:3000/list/${this.state.textLink}`}\r\n//            className={`link__none ${this.state.linkActive ? \"link__block\" : null}`}\r\n//            target=\"_blank\" rel=\"noreferrer\" >Share with friends</a>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     favoriteMovies: state.favoriteMovies,\r\n//   };\r\n// };\r\n\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   removeFromCard: (id) => dispatch( actionDelete(id) )\r\n// })\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Favorites);\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,iBAAiB;AACxB,SAASC,YAAY,QAAQ,qBAAqB;AAElD,SAAQC,OAAO,QAAO,aAAa;;AAGnC;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}